âœ¨ Steps to Build a Production APK (Signed APK)
1. Switch to Release Mode
In Android Studio:

Go to Build â†’ Build Bundle(s) / APK(s) â†’ Build APK(s) (it builds a debug APK by default).

But for production, you need to build a Signed APK.

2. Create a Keystore (first time only)
You need a keystore â€” a special file that holds your digital signature.

Steps:

Go to Build â†’ Generate Signed Bundle / APK.

Choose APK and click Next.

Click Create new... under Key store path.

Fill details like:

Key store path (where to save .jks file)

Key alias (like "my_key")

Key password (password and key is same- crossed input up to zero)

Validity (usually 25+ years)

Your Name, Organization, etc.

ðŸ“¦ Save your .jks file somewhere safe. Youâ€™ll need it every time you update your app!

3. Configure Signing
After creating or choosing the keystore:

Enter the Key alias and Key password.

Click Next.

4. Select Build Variant
Choose Release.

Click Finish.

Android Studio will start building your signed release APK.

5. Find the APK
After building, youâ€™ll find your .apk here:

arduino
app/build/outputs/apk/release/app-release.apk
âœ… This APK is ready for production or Google Play upload!

âš¡ Pro Tips for Production
In build.gradle (Module: app) set:

kotlin
buildTypes {
    release {
        minifyEnabled true // shrinks code (with ProGuard or R8)
        shrinkResources true // removes unused resources
        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
}
Enable ProGuard / R8 to optimize and shrink APK size.

Remove all log statements for production (or disable logs in release build).

Use App Bundles (.aab) for Google Play (they are smaller and preferred).

Build â†’ Build Bundle(s) / APK(s) â†’ Build Bundle (.aab)

